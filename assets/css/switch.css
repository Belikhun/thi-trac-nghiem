/*
? |-----------------------------------------------------------------------------------------------|
? |  /assets/css/switch.css                                                                       |
? |                                                                                               |
? |  Copyright (c) 2018-2020 Belikhun. All right reserved                                         |
? |  Licensed under the MIT License. See LICENSE in the project root for license information.     |
? |-----------------------------------------------------------------------------------------------|
*/

.iosSwitch {
    display: inline-block;
    position: relative;
    cursor: pointer;
    width: 50px;
    height: 25px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.iosSwitch .background {
    position: absolute;
    top: 0;
    left: 0;
    background-color: #BDBDBD;
    transition: all .3s ease-in-out;
    width: 100%;
    height: 100%;
    border: 1px solid #ADADA5;
    border-radius: 48px;
    box-sizing: border-box;
}

/* Hide the browser's default checkbox */
.iosSwitch input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

.iosSwitch .circle {
    position: absolute;
    display: inline-block;
    top: 0;
    left: 0;
    right: 24px;
    margin: 1px;
    height: 23px;
    border-radius: 11.5px;
    background-color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, .2);
    will-change: left, right;
    animation: swanmrv 0.3s cubic-bezier(0.48,-0.07, 0.49, 1.08);
    animation-fill-mode: forwards;
}

.iosSwitch input:checked + .background {
    background: #4cd864;
    border-color: #4cd864;
}

.iosSwitch input:checked ~ .circle {
    animation: swanmfw 0.3s cubic-bezier(0.48,-0.07, 0.49, 1.08);
    animation-fill-mode: forwards;
}

@keyframes swanmfw {
    0% {
        left: 0;
    }
    30% {
        left: 0;
        right: 12px;
    }
    100% {
        left: 24px;
        right: 0;
    }
}

@keyframes swanmrv {
    0% {
        right: 0;
        left: 24px;
    }
    30% {
        left: 12px;
        right: 0;
    }
    100% {
        left: 0;
        right: 24px;
    }
}

.materialSwitch {
    display: inline-block;
    position: relative;
    cursor: pointer;
    width: 40px;
    height: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.materialSwitch input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

.materialSwitch .track {
    position: absolute;
    width: 40px;
    height: 16px;
    border-radius: 8px;
    background-color: #BDC1C6;
    transition: color 0.2s ease-in-out;
}

.materialSwitch .track::after {
    content: "";
    position: absolute;
    background-color: #ffffff;
    width: 24px;
    height: 24px;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    border-radius: 50%;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.4);
    transition: all 0.2s ease-in-out;
}

.materialSwitch input:checked + .track {
    background-color: rgba(26, 115, 232, 0.5);
}

.materialSwitch input:checked + .track::after {
    left: 16px;
    background-color: #4285f4;
}

.materialSwitch input:disabled + .track {
    cursor: not-allowed;
    background-color: rgb(146, 146, 146);
}

.materialSwitch input:disabled + .track::after {
    background-color: rgb(116, 116, 116);
}

.materialSwitch input:checked:disabled + .track {
    background-color: rgba(7, 68, 148, 0.5);
}

.materialSwitch input:checked:disabled + .track::after {
    background-color: #1e53a8;
}

.sq-checkbox {
    position: relative;
    display: block;
    width: 24px;
    height: 12px;
    cursor: pointer;
    user-select: none;

    transition: width 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.sq-checkbox input {
    position: absolute;
    display: none;
    height: 0;
    width: 0;
}

.sq-checkbox .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border: 3px solid rgb(68, 170, 221);
    border-radius: 10px;
    box-sizing: border-box;

    transition: all 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.sq-checkbox:hover {
    width: 42px;
}

.sq-checkbox:hover > input ~ .checkmark {
    background-color: rgba(68, 170, 221, 0.4);
    border-color: rgb(160, 220, 250);
}

.sq-checkbox > input:checked ~ .checkmark {
    background-color: rgb(68, 170, 221);
}

.sq-checkbox:hover > input:checked ~ .checkmark {
    background-color: rgb(160, 220, 250);
}

.sq-checkbox > input:disabled ~ .checkmark {
    filter: brightness(0.8);
    cursor: not-allowed;
}

.sq-checkbox.pink .checkmark {
    border-color: rgb(255, 102, 170);
}

.sq-checkbox.pink:hover > input ~ .checkmark {
    background-color: rgba(255, 102, 171, 0.4);
    border-color: rgb(255, 194, 214);
}

.sq-checkbox.pink > input:checked ~ .checkmark {
    background-color: rgb(255, 102, 170);
}

.sq-checkbox.pink:hover > input:checked ~ .checkmark {
    background-color: rgb(255, 194, 214);
}

.circleCheckbox {
    position: relative;
    display: inline-block;
    width: 28px;
    height: 28px;
    user-select: none;
}

.circleCheckbox > input {
    position: absolute;
    display: none;
    height: 0;
    width: 0;
}

.circleCheckbox > .checkmark {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 2px solid rgb(34, 34, 34);
    border-radius: 50%;
    box-sizing: border-box;
    font-size: 15px;
    font-weight: bold;
    cursor: pointer;

    transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.circleCheckbox > input:disabled + .checkmark {
    cursor: not-allowed;
}

.circleCheckbox > input:checked + .checkmark,
.circleCheckbox[data-force="true"] > input + .checkmark {
    background-color: rgb(34, 34, 34);
    border-width: 0;
    color: rgb(228, 228, 228);
}

.circleCheckbox[data-color="green"] > input:checked + .checkmark,
.circleCheckbox[data-color="green"][data-force="true"] > input + .checkmark {
    background-color: rgb(55, 228, 55);
    color: rgb(44, 44, 44);
}

.circleCheckbox[data-color="red"] > input:checked + .checkmark,
.circleCheckbox[data-color="red"][data-force="true"] > input + .checkmark {
    background-color: rgb(255, 125, 125);
    color: rgb(44, 44, 44);
}

.circleCheckbox[data-color="blue"] > input:checked + .checkmark,
.circleCheckbox[data-color="blue"][data-force="true"] > input + .checkmark {
    background-color: rgb(44, 224, 248);
    color: rgb(44, 44, 44);
}

.circleCheckbox[data-color="yellow"] > input:checked + .checkmark,
.circleCheckbox[data-color="yellow"][data-force="true"] > input + .checkmark {
    background-color: rgb(217, 230, 47);
    color: rgb(44, 44, 44);
}

body.dark .circleCheckbox > .checkmark {
    border-color: rgb(65, 65, 65);
}

body.dark .circleCheckbox > input:checked + .checkmark,
body.dark .circleCheckbox[data-force="true"] > input + .checkmark {
    background-color: rgb(168, 168, 168);
    color: rgb(46, 46, 46);
}

body.dark .circleCheckbox[data-color="green"] > input:checked + .checkmark,
body.dark .circleCheckbox[data-color="green"][data-force="true"] > input + .checkmark {
    background-color: rgb(55, 228, 55);
    color: rgb(44, 44, 44);
}

body.dark .circleCheckbox[data-color="red"] > input:checked + .checkmark,
body.dark .circleCheckbox[data-color="red"][data-force="true"] > input + .checkmark {
    background-color: rgb(255, 125, 125);
    color: rgb(44, 44, 44);
}

body.dark .circleCheckbox[data-color="blue"] > input:checked + .checkmark,
body.dark .circleCheckbox[data-color="blue"][data-force="true"] > input + .checkmark {
    background-color: rgb(44, 224, 248);
    color: rgb(44, 44, 44);
}

body.dark .circleCheckbox[data-color="yellow"] > input:checked + .checkmark,
body.dark .circleCheckbox[data-color="yellow"][data-force="true"] > input + .checkmark {
    background-color: rgb(217, 230, 47);
    color: rgb(44, 44, 44);
}